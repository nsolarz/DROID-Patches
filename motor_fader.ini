[p2b8]
[p2b8]
[p2b8]
[p2b8]
[p2b8]
[p2b8]
[s10]
[m4]
[m4]
[m4]
[m4]

# -------------------------------------------------
# Config
# -------------------------------------------------

[droid]
    ledbrightness = 0.5
    m4notchpower = 0

[midithrough]
    tousb = 0

# -------------------------------------------------
# Hardware Mapping
# -------------------------------------------------
[copy]
    input = S7.1
    output = _SEQUENCER_SELECT

[copy]
    input = S7.2
    output = _PAGE_SELECT

[copy]
    input = S7.3
    output = _SEQUENCER_1_SELECT

[copy]
    input = S7.4 
    output = _SEQUENCER_1_SUB_CHOICE

[copy]
    input = B6.2
    output = _MOTO_GATES

[copy]
    input = B6.4
    output = _MOTO_START_END
[copy]
    input = B6.6
    output = _MOTO_GATE_PATTERN
[copy]
    input = B6.8
    output = _MOTO_SKIP
[copy]
    output = L6.2
    input = _MOTO_GATES_LED
[copy]
    output = L6.4
    input = _MOTO_START_END_LED
[copy]
    output = L6.6
    input = _MOTO_GATE_PATTERN_LED
[copy]
    output = L6.8
    input = _MOTO_SKIP_LED
[copy]
    input = B6.1
    output = _MOTO_P1
[copy]
    input = B6.3
    output = _MOTO_P2
[copy]
    input = B6.5
    output = _MOTO_P3
[copy]
    input = B6.7
    output = _MOTO_P4
[copy]
    output = L6.1
    input = _MOTO_P1_LED
[copy]
    output = L6.3
    input = _MOTO_P2_LED
[copy]
    output = L6.5
    input = _MOTO_P3_LED
[copy]
    output = L6.7
    input = _MOTO_P4_LED

[copy]
    input = B1.1
    output = _ALGO_B1
[copy]
    output= L1.1
    input  = _ALGO_B1_LED
[copy]
    input = B1.2
    output = _ALGO_B2
[copy]
    output= L1.2
    input  = _ALGO_B2_LED
[copy]
    input = B2.1
    output = _ALGO_B3
[copy]
    output= L2.1
    input  = _ALGO_B3_LED
[copy]
    input = B2.2
    output = _ALGO_B4
[copy]
    output= L2.2
    input  = _ALGO_B4_LED
[copy]
    input = B3.1
    output = _ALGO_B5
[copy]
    output= L3.1
    input  = _ALGO_B5_LED
[copy]
    input = B3.2
    output = _ALGO_B6
[copy]
    output= L3.2
    input  = _ALGO_B6_LED
[copy]
    input = B4.1
    output = _ALGO_B7
[copy]
    output= L4.1
    input  = _ALGO_B7_LED
[copy]
    input = B4.2
    output = _ALGO_B8
[copy]
    output = L4.2
    input = _ALGO_B8_LED

[copy]
    input = B1.3
    output = _ALGO_B9
[copy]
    output= L1.3
    input  = _ALGO_B9_LED
[copy]
    input = B1.4
    output = _ALGO_B10
[copy]
    output= L1.4
    input  = _ALGO_B10_LED
[copy]
    input = B2.3
    output = _ALGO_B11
[copy]
    output= L2.3
    input  = _ALGO_B11_LED
[copy]
    input = B2.4
    output = _ALGO_B12
[copy]
    output= L2.4
    input  = _ALGO_B12_LED
[copy]
    input = B3.3
    output = _ALGO_B13
[copy]
    output= L3.3
    input  = _ALGO_B13_LED
[copy]
    input = B3.4
    output = _ALGO_B14
[copy]
    output= L3.4
    input  = _ALGO_B14_LED
[copy]
    input = B4.3
    output = _ALGO_B15
[copy]
    output= L4.3
    input  = _ALGO_B15_LED
[copy]
    input = B4.4
    output = _ALGO_B16
[copy]
    output= L4.4
    input  = _ALGO_B16_LED

[copy]
    input = P5.1
    output = _LUCKY_CHANCE_POT
[copy]
    input = P5.2
    output = _LUCKY_AMOUNT_POT

[copy]
    input = B5.1
    output = _LUCKY_FADERS
[copy]
    input = B5.2
    output = _LUCKY_BUTTONS
[copy]
    input = B5.3
    output = _LUCKY_CVS
[copy]
    input = B5.4
    output = _LUCKY_GATES
[copy]
    input = B5.5
    output = _LUCKY_CV_SPREAD
[copy]
    input = B5.6
    output = _LUCKY_GATE_PROB
[copy]
    input = B5.7
    output = _LUCKY_RANDOMIZE_CV
[copy]
    input = B5.8
    output = _LUCKY_RATCHETS

[copy]
    input = _SEQUENCER_1_CV
    output = O1
[copy]
    input = _SEQUENCER_1_GATE
    output = G1


# -------------------------------------------------
# Selection Constants
# -------------------------------------------------

[copy]
    input = 0
    output = _SEQUENCER_1
[copy]
    input = 0
    output = _ALGOQUENCER_1
[copy]
    input = 1
    output = _SUB_SEQUENCER_1

[copy]
    input = 2
    #output = _SEQUENCER_2
[copy]
    input = 1
    output = _ALGOQUENCER_2
[copy]
    input = 3
    #output = _SUB_SEQUENCER_2

[copy]
    input = 4
    #output = _SEQUENCER_3
[copy]
    input = 2
    output = _ALGOQUENCER_3
[copy]
    input = 5
    #output = _SUB_SEQUENCER_3


# -------------------------------------------------
# Universal controls
# -------------------------------------------------

[buttongroup]
    button1 = _MOTO_GATES
    button2 = _MOTO_START_END
    button3 = _MOTO_GATE_PATTERN
    button4 = _MOTO_SKIP
    led1 = _MOTO_GATES_LED
    led2 = _MOTO_START_END_LED
    led3 = _MOTO_GATE_PATTERN_LED
    led4 = _MOTO_SKIP_LED
    output = _BUTTONMODE

[buttongroup]
    button1 = _MOTO_P1
    button2 = _MOTO_P2
    button3 = _MOTO_P3
    button4 = _MOTO_P4
    led1 = _MOTO_P1_LED
    led2 = _MOTO_P2_LED
    led3 = _MOTO_P3_LED
    led4 = _MOTO_P4_LED
    output = _PAGE

[pot]
    pot = _LUCKY_CHANCE_POT
    ledgauge = 0.65
    output = _LUCKY_CHANCE

[pot]
    pot = _LUCKY_AMOUNT_POT
    ledgauge = 0.75
    output = _LUCKY_AMOUNT

[switch]
    input1 = _ALGOQUENCER_1
    input2 = _ALGOQUENCER_1
    input3 = _ALGOQUENCER_2
    input4 = _ALGOQUENCER_2
    input5 = _ALGOQUENCER_3
    input6 = _ALGOQUENCER_3
    input7 = 3
    input8 = 4
    offset = _SEQUENCER_SELECT
    output1 = _LEFT_SELECT_BUTTONS


# -------------------------------------------------
# Clock
# -------------------------------------------------

[midiin]
    clock16 = _CLOCK16 # 16th note
    stop = _STOP
    clock4 = _CLOCK4 # Quarter note

[clocktool]
    #reset = _STOP
    #output = _CLOCK1BAR # 1 Bar
    gatelength = 0.5
    divide = 4
    #clock = _CLOCK4

# -------------------------------------------------
# Sequencer 1
# -------------------------------------------------

[motoquencer] # Main motor
    clock = _CLOCK16
    reset = _STOP
    select = _SEQUENCER_SELECT
    selectat = _SEQUENCER_1
    fadermode = _PAGE_SELECT
    buttonmode = _BUTTONMODE
    page = _PAGE
    numfaders = 16
    numsteps = 64
    cv = _MOTO_1_CV
    gate = _MOTO_1_GATE
    transpose = _MOTO2_CV * _SUB_1_TRANSPOSE_DIR
    luckychance = _LUCKY_CHANCE
    luckyamount = _LUCKY_AMOUNT
    luckyfaders = _LUCKY_FADERS
    luckybuttons = _LUCKY_BUTTONS
    luckycvs = _LUCKY_CVS
    luckyspread = _LUCKY_CV_SPREAD
    luckygates = _LUCKY_GATES
    luckygateprob = _LUCKY_GATE_PROB
    luckyratchets = _LUCKY_RATCHETS
    luckyrandomizecv = _LUCKY_RANDOMIZE_CV
    autoreset = 64

[algoquencer]
    clock = _CLOCK16
    reset = _STOP
    select = _LEFT_SELECT_BUTTONS
    selectat = _ALGOQUENCER_1
    pitch = _ALGO_1_CV
    gate = _ALGO_1_GATE
    button1 = _ALGO_B1
    button2 = _ALGO_B2
    button3 = _ALGO_B3
    button4 = _ALGO_B4
    button5 = _ALGO_B5
    button6 = _ALGO_B6
    button7 = _ALGO_B7
    button8 = _ALGO_B8
    button9 = _ALGO_B9
    button10 = _ALGO_B10
    button11 = _ALGO_B11
    button12 = _ALGO_B12
    button13 = _ALGO_B13
    button14 = _ALGO_B14
    button15 = _ALGO_B15
    button16 = _ALGO_B16
    led1 = _ALGO_B1_LED
    led2 = _ALGO_B2_LED
    led3 = _ALGO_B3_LED
    led4 = _ALGO_B4_LED
    led5 = _ALGO_B5_LED
    led6 = _ALGO_B6_LED
    led7 = _ALGO_B7_LED
    led8 = _ALGO_B8_LED
    led9 = _ALGO_B9_LED
    led10 = _ALGO_B10_LED
    led11 = _ALGO_B11_LED
    led12 = _ALGO_B12_LED
    led13 = _ALGO_B13_LED
    led14 = _ALGO_B14_LED
    led15 = _ALGO_B15_LED
    led16 = _ALGO_B16_LED

[math]
    input1 = _ALGO_1_CV
    input2 = _MOTO2_CV * _SUB_1_TRANSPOSE_DIR
    sum = _ALGO_1_TRANSPOSED_CV

[motoquencer] # Sub motor
    select = _SEQUENCER_SELECT
    selectat = _SUB_SEQUENCER_1
    clock = _CLOCK4
    reset = _STOP
    fadermode = _PAGE_SELECT
    buttonmode = _BUTTONMODE
    page = _PAGE
    numfaders = 16
    numsteps = 64
    cv = _MOTO2_CV
    cvbase = 0.0
    cvrange = 0.1
    luckychance = _LUCKY_CHANCE
    luckyamount = _LUCKY_AMOUNT
    luckyfaders = _LUCKY_FADERS
    luckybuttons = _LUCKY_BUTTONS
    luckycvs = _LUCKY_CVS
    luckyspread = _LUCKY_CV_SPREAD
    luckygates = _LUCKY_GATES
    luckygateprob = _LUCKY_GATE_PROB
    luckyratchets = _LUCKY_RATCHETS
    luckyrandomizecv = _LUCKY_RANDOMIZE_CV


 # Sequencer choice for output 1
[switch]
    input1 = _ALGO_1_TRANSPOSED_CV
    input2 = 0
    input3 =  _MOTO_1_CV
    offset = _SEQUENCER_1_SELECT
    output1 = _SEQUENCER_1_CV

[switch]
    input1 = _ALGO_1_GATE
    input2 = 0
    input3 = _MOTO_1_GATE
    offset = _SEQUENCER_1_SELECT
    output1 = _SEQUENCER_1_GATE

[switch] # Subsequencer transpose up or down
    input1 = -1
    input2 = 0
    input3 = 1
    offset = _SEQUENCER_1_SUB_CHOICE
    output1 = _SUB_1_TRANSPOSE_DIR